//
//  PhotosMapViewController.swift
//  CatsOnMap
//
//  Created by Nikolay Shubenkov on 01/04/2017.
//  Copyright ¬© 2017 Nikolay Shubenkov. All rights reserved.
//

import UIKit
import MapKit

class PhotosMapViewController: UIViewController {

    @IBOutlet var mapView: MKMapView!
    
    private var apiService = FlickrAPIService()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        apiService.search(tag: "–∫–∏—Å–∞",
                          //—ç—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –ø–æ–∑–∂–µ
                          success: { cats in
                            
        print("\n–ê –≤–æ—Ç –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\(cats)")
                            //—Ç.–∫. —ç—Ç–æ—Ç –∫–æ–¥ –≤—ã–∑–≤–∞–Ω –Ω–µ –≤ –æ—Å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
                            //mainQueue 
                            //–∞ –º—ã —Å–µ–π—á–∞—Å –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
                            //–Ω–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Ä–∞—å–æ—Ç—ã
                            //—Å –Ω–∏–º. (mainQueue)
                            DispatchQueue.main.async {
                                self.showPinsOnMap(pins: cats)
                            }

        //–∏ —ç—Ç–æ—Ç —Ç–æ–∂–µ –±—É–¥–µ—Ç —á—É—Ç—å –ø–æ–∑–∂–µ –≤—ã–∑–≤–∞–Ω
        }) { error in
            
            print("\(error)")
        }
        
//        showGrandCentralDispatchInAction()
    }
    
    func showPinsOnMap(pins:[PhotoInfo])
    {
        mapView.removeAnnotations(mapView.annotations)
        mapView.addAnnotations(pins)
    }
    
    func showGrandCentralDispatchInAction(){
        
        //—Å–æ–∑–¥–∞–¥–∏–º –æ—á–µ—Ä–µ–¥—å - —ç—Ç–æ –æ–±—ä–µ–∫—Ç,  –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ 
        //–≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—É—é –∑–∞–¥–∞—á—É
        let queue = DispatchQueue(label: "ru.specialist.swiftapps2")
        
        //–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        queue.sync {
            for i in 0..<10 {
                print("ü§°_\(i)")
            }
        }
        
        //—ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–µ—è–µ—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
//        queue.async {
            for i in 100..<110 {
                print("_üëª\(i)")
            }
//        }
        
        
    }
    
    
}
