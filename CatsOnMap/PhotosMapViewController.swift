//
//  PhotosMapViewController.swift
//  CatsOnMap
//
//  Created by Nikolay Shubenkov on 01/04/2017.
//  Copyright ¬© 2017 Nikolay Shubenkov. All rights reserved.
//

import UIKit
import MapKit

class PhotosMapViewController: UIViewController {

    var searchBar: UISearchBar!
    @IBOutlet var mapView: MKMapView!
    
    private var apiService = FlickrAPIService()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setupSearch()
        
        mapView.delegate = self
//        showGrandCentralDispatchInAction()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        //–∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –Ω–∞—à –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —å—É–¥–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        //–º—ã –ø–æ–∑–≤–æ–ª–∏–º —Å–∫—Ä—ã–≤–∞—Ç—å —à–∞–ø–∫—É –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏ –∫–∞—Ä—Ç—ã
        navigationController!.hidesBarsOnSwipe = true
        navigationController?.hidesBarsOnTap = true
    }
    
    func setupSearch(){
        searchBar = UISearchBar(frame: CGRect(x: 0, y: 0, width: 200, height: 30))
            //–∑–∞—Å—Ç–∞–≤–∏–º –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π —Ä–∞–∑–º–µ—Ä
        searchBar.sizeToFit()
        
        //–≤—Å—Ç–∞–≤–∏–º —Å—Ç—Ä–æ–∫—É –ø–æ–∏—Å–∫–∞ –≤ —à–∞–ø–∫—É
        navigationItem.titleView = searchBar
        searchBar.delegate = self
        
        searchBar.delegate = self
        searchBar.showsCancelButton = true
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let vc = segue.destination as? PhotoDetailedViewController,
            let photo = sender as? PhotoInfo {
            vc.photo = photo
        }
    }
    
    func searchFor(text:String){
        
        apiService.search(tag: text,
                          //—ç—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –ø–æ–∑–∂–µ
            success: { cats in
                
                print("\n–ê –≤–æ—Ç –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\(cats)")
                //—Ç.–∫. —ç—Ç–æ—Ç –∫–æ–¥ –≤—ã–∑–≤–∞–Ω –Ω–µ –≤ –æ—Å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
                //mainQueue
                //–∞ –º—ã —Å–µ–π—á–∞—Å –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
                //–Ω–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Ä–∞—å–æ—Ç—ã
                //—Å –Ω–∏–º. (mainQueue)
                DispatchQueue.main.async {
                    self.showPinsOnMap(pins: cats)
                }
                
                //–∏ —ç—Ç–æ—Ç —Ç–æ–∂–µ –±—É–¥–µ—Ç —á—É—Ç—å –ø–æ–∑–∂–µ –≤—ã–∑–≤–∞–Ω
        }) { error in
            
            print("\(error)")
        }
    }
    
    func showPinsOnMap(pins:[PhotoInfo])
    {
        mapView.removeAnnotations(mapView.annotations)
        mapView.addAnnotations(pins)
    }
    
    func showGrandCentralDispatchInAction(){
        
        //—Å–æ–∑–¥–∞–¥–∏–º –æ—á–µ—Ä–µ–¥—å - —ç—Ç–æ –æ–±—ä–µ–∫—Ç,  –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ 
        //–≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—É—é –∑–∞–¥–∞—á—É
        let queue = DispatchQueue(label: "ru.specialist.swiftapps2")
        
        //–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        queue.sync {
            for i in 0..<10 {
                print("ü§°_\(i)")
            }
        }
        
        //—ç—Ç–∞ –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–µ—è–µ—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
//        queue.async {
            for i in 100..<110 {
                print("_üëª\(i)")
            }
//        }
        
        
    }
}


extension PhotosMapViewController : MKMapViewDelegate {
    
    func mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {
        
        //–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –º–µ—Ç–∫–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –Ω–∞–º–∏
        //–≤–µ—Ä–Ω–µ–º nil, –ø—É—Å—Ç—å mapView —Å–∞–º —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è —Å —Ç–µ–º,
        //–∫–∞–∫ —ç—Ç—É –º–µ—Ç–∫—É –ø–æ–∫–∞–∑–∞—Ç—å
        guard let photo = annotation as? PhotoInfo else {
            return nil
        }
        
        //—ç—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –≤—Å–µ—Ö –≤—å—é, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ—Ç–∫—É
        let viewId = "photoPin"
        
        //–∑–∞–ø—Ä–æ—Å–∏–º —Å–≤–æ–±–æ–¥–Ω—ã–π –≤—å—é –¥–ª—è –æ—Ç–æ–±—Ä–∂–∞–µ–Ω–∏—è –º–µ—Ç–∫–∏ —Å —Ç–∞–∫–∏–º-—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º
        var photoView = mapView.dequeueReusableAnnotationView(withIdentifier: viewId)
        
        //–µ—Å–ª–∏ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Ç–æ–∫ 
        //—Ç–æ —Å–æ–∑–¥–∞–¥–∏–º –µ–≥–æ —Å–∞–º–∏
        if photoView == nil {
            photoView = MKPinAnnotationView(annotation: photo,
                                            reuseIdentifier: viewId)
            photoView?.rightCalloutAccessoryView = UIButton(type: .detailDisclosure)
        }
        photoView?.annotation = photo
        
        //—Ç—É—Ç –º—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
        let imageView = UIImageView(frame: CGRect(x: 0,
                                                  y: 0,
                                                  width: 50,
                                                  height: 50))
        
        
        imageView.contentMode = .scaleAspectFill
        
        imageView.loadImage(link: photo.iconLink)
        
        
        photoView?.leftCalloutAccessoryView = imageView
        photoView?.canShowCallout = true
        
        return photoView
    }
    
    //–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç —Ç–∏–ø–∞
    //UIButton, UISwitch –≤—Å–µ, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º –æ—Ç UIControl
    //—Å—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
    //—Ç.–∫. —É –Ω–∞—Å –Ω–∞ –º–µ—Ç–∫–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞
    //–º—ã –∑–Ω–∞–µ–º, —á—Ç–æ –º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ª–∏—à—å –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ
    func mapView(_ mapView: MKMapView, annotationView view: MKAnnotationView, calloutAccessoryControlTapped control: UIControl) {
        
        guard let photo = view.annotation as? PhotoInfo else {
            return
        }
        
        performSegue(withIdentifier: "Show Photo Detailes",
                     sender: photo)
    }
    
    func mapView(_ mapView: MKMapView, didSelect view: MKAnnotationView) {
        if let imageView = (view as? MKPinAnnotationView)?.leftCalloutAccessoryView as? UIImageView,
            let photo = view.annotation as? PhotoInfo{
            imageView.loadImage(link: photo.iconLink,
                                highPriority:true)
        }
    }
}


